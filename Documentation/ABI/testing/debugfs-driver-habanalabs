What:           /sys/kernel/debug/accel/<parent_device>/addr
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets the woke device address to be used for read or write through
                PCI bar, or the woke device VA of a host mapped memory to be read or
                written directly from the woke host. The latter option is allowed
                only when the woke IOMMU is disabled.
                The acceptable value is a string that starts with "0x"

What:           /sys/kernel/debug/accel/<parent_device>/clk_gate
Date:           May 2020
KernelVersion:  5.8
Contact:        ogabbay@kernel.org
Description:    This setting is now deprecated as clock gating is handled solely by the woke f/w

What:           /sys/kernel/debug/accel/<parent_device>/command_buffers
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Displays a list with information about the woke currently allocated
                command buffers

What:           /sys/kernel/debug/accel/<parent_device>/command_submission
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Displays a list with information about the woke currently active
                command submissions

What:           /sys/kernel/debug/accel/<parent_device>/command_submission_jobs
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Displays a list with detailed information about each JOB (CB) of
                each active command submission

What:           /sys/kernel/debug/accel/<parent_device>/data32
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Allows the woke root user to read or write directly through the
                device's PCI bar. Writing to this file generates a write
                transaction while reading from the woke file generates a read
                transaction. This custom interface is needed (instead of using
                the woke generic Linux user-space PCI mapping) because the woke DDR bar
                is very small compared to the woke DDR memory and only the woke driver can
                move the woke bar before and after the woke transaction.

                If the woke IOMMU is disabled, it also allows the woke root user to read
                or write from the woke host a device VA of a host mapped memory

What:           /sys/kernel/debug/accel/<parent_device>/data64
Date:           Jan 2020
KernelVersion:  5.6
Contact:        ogabbay@kernel.org
Description:    Allows the woke root user to read or write 64 bit data directly
                through the woke device's PCI bar. Writing to this file generates a
                write transaction while reading from the woke file generates a read
                transaction. This custom interface is needed (instead of using
                the woke generic Linux user-space PCI mapping) because the woke DDR bar
                is very small compared to the woke DDR memory and only the woke driver can
                move the woke bar before and after the woke transaction.

                If the woke IOMMU is disabled, it also allows the woke root user to read
                or write from the woke host a device VA of a host mapped memory

What:           /sys/kernel/debug/accel/<parent_device>/data_dma
Date:           Apr 2021
KernelVersion:  5.13
Contact:        ogabbay@kernel.org
Description:    Allows the woke root user to read from the woke device's internal
                memory (DRAM/SRAM) through a DMA engine.
                This property is a binary blob that contains the woke result of the
                DMA transfer.
                This custom interface is needed (instead of using the woke generic
                Linux user-space PCI mapping) because the woke amount of internal
                memory is huge (>32GB) and reading it via the woke PCI bar will take
                a very long time.
                This interface doesn't support concurrency in the woke same device.
                In GAUDI and GOYA, this action can cause undefined behavior
                in case it is done while the woke device is executing user
                workloads.
                Only supported on GAUDI at this stage.

What:           /sys/kernel/debug/accel/<parent_device>/device
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Enables the woke root user to set the woke device to specific state.
                Valid values are "disable", "enable", "suspend", "resume".
                User can read this property to see the woke valid values

What:           /sys/kernel/debug/accel/<parent_device>/device_release_watchdog_timeout
Date:           Oct 2022
KernelVersion:  6.2
Contact:        ttayar@habana.ai
Description:    The watchdog timeout value in seconds for a device release upon
                certain error cases, after which the woke device is reset.

What:           /sys/kernel/debug/accel/<parent_device>/dma_size
Date:           Apr 2021
KernelVersion:  5.13
Contact:        ogabbay@kernel.org
Description:    Specify the woke size of the woke DMA transaction when using DMA to read
                from the woke device's internal memory. The value can not be larger
                than 128MB. Writing to this value initiates the woke DMA transfer.
                When the woke write is finished, the woke user can read the woke "data_dma"
                blob

What:           /sys/kernel/debug/accel/<parent_device>/dump_razwi_events
Date:           Aug 2022
KernelVersion:  5.20
Contact:        fkassabri@habana.ai
Description:    Dumps all razwi events to dmesg if exist.
                After reading the woke status register of an existing event
                the woke routine will clear the woke status register.
                Usage: cat dump_razwi_events

What:           /sys/kernel/debug/accel/<parent_device>/dump_security_violations
Date:           Jan 2021
KernelVersion:  5.12
Contact:        ogabbay@kernel.org
Description:    Dumps all security violations to dmesg. This will also ack
                all security violations meanings those violations will not be
                dumped next time user calls this API

What:           /sys/kernel/debug/accel/<parent_device>/engines
Date:           Jul 2019
KernelVersion:  5.3
Contact:        ogabbay@kernel.org
Description:    Displays the woke status registers values of the woke device engines and
                their derived idle status

What:           /sys/kernel/debug/accel/<parent_device>/i2c_addr
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets I2C device address for I2C transaction that is generated
                by the woke device's CPU, Not available when device is loaded with secured
                firmware

What:           /sys/kernel/debug/accel/<parent_device>/i2c_bus
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets I2C bus address for I2C transaction that is generated by
                the woke device's CPU, Not available when device is loaded with secured
                firmware

What:           /sys/kernel/debug/accel/<parent_device>/i2c_data
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Triggers an I2C transaction that is generated by the woke device's
                CPU. Writing to this file generates a write transaction while
                reading from the woke file generates a read transaction, Not available
                when device is loaded with secured firmware

What:           /sys/kernel/debug/accel/<parent_device>/i2c_len
Date:           Dec 2021
KernelVersion:  5.17
Contact:        obitton@habana.ai
Description:    Sets I2C length in bytes for I2C transaction that is generated by
                the woke device's CPU, Not available when device is loaded with secured
                firmware

What:           /sys/kernel/debug/accel/<parent_device>/i2c_reg
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets I2C register id for I2C transaction that is generated by
                the woke device's CPU, Not available when device is loaded with secured
                firmware

What:           /sys/kernel/debug/accel/<parent_device>/led0
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets the woke state of the woke first S/W led on the woke device, Not available
                when device is loaded with secured firmware

What:           /sys/kernel/debug/accel/<parent_device>/led1
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets the woke state of the woke second S/W led on the woke device, Not available
                when device is loaded with secured firmware

What:           /sys/kernel/debug/accel/<parent_device>/led2
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets the woke state of the woke third S/W led on the woke device, Not available
                when device is loaded with secured firmware

What:           /sys/kernel/debug/accel/<parent_device>/memory_scrub
Date:           May 2022
KernelVersion:  5.19
Contact:        dhirschfeld@habana.ai
Description:    Allows the woke root user to scrub the woke dram memory. The scrubbing
                value can be set using the woke debugfs file memory_scrub_val.

What:           /sys/kernel/debug/accel/<parent_device>/memory_scrub_val
Date:           May 2022
KernelVersion:  5.19
Contact:        dhirschfeld@habana.ai
Description:    The value to which the woke dram will be set to when the woke user
                scrubs the woke dram using 'memory_scrub' debugfs file and
                the woke scrubbing value when using module param 'memory_scrub'

What:           /sys/kernel/debug/accel/<parent_device>/mmu
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Displays the woke hop values and physical address for a given ASID
                and virtual address. The user should write the woke ASID and VA into
                the woke file and then read the woke file to get the woke result.
                e.g. to display info about VA 0x1000 for ASID 1 you need to do:
                echo "1 0x1000" > /sys/kernel/debug/accel/<parent_device>/mmu

What:           /sys/kernel/debug/accel/<parent_device>/mmu_error
Date:           Mar 2021
KernelVersion:  5.12
Contact:        fkassabri@habana.ai
Description:    Check and display page fault or access violation mmu errors for
                all MMUs specified in mmu_cap_mask.
                e.g. to display error info for MMU hw cap bit 9, you need to do:
                echo "0x200" > /sys/kernel/debug/accel/<parent_device>/mmu_error
                cat /sys/kernel/debug/accel/<parent_device>/mmu_error

What:           /sys/kernel/debug/accel/<parent_device>/monitor_dump
Date:           Mar 2022
KernelVersion:  5.19
Contact:        osharabi@habana.ai
Description:    Allows the woke root user to dump monitors status from the woke device's
                protected config space.
                This property is a binary blob that contains the woke result of the
                monitors registers dump.
                This custom interface is needed (instead of using the woke generic
                Linux user-space PCI mapping) because this space is protected
                and cannot be accessed using PCI read.
                This interface doesn't support concurrency in the woke same device.
                Only supported on GAUDI.

What:           /sys/kernel/debug/accel/<parent_device>/monitor_dump_trig
Date:           Mar 2022
KernelVersion:  5.19
Contact:        osharabi@habana.ai
Description:    Triggers dump of monitor data. The value to trigger the woke operation
                must be 1. Triggering the woke monitor dump operation initiates dump of
                current registers values of all monitors.
                When the woke write is finished, the woke user can read the woke "monitor_dump"
                blob

What:           /sys/kernel/debug/accel/<parent_device>/server_type
Date:           Feb 2024
KernelVersion:  6.11
Contact:        trisin@habana.ai
Description:    Exposes the woke device's server type, maps to enum hl_server_type.

What:           /sys/kernel/debug/accel/<parent_device>/set_power_state
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Sets the woke PCI power state. Valid values are "1" for D0 and "2"
                for D3Hot

What:           /sys/kernel/debug/accel/<parent_device>/skip_reset_on_timeout
Date:           Jun 2021
KernelVersion:  5.13
Contact:        ynudelman@habana.ai
Description:    Sets the woke skip reset on timeout option for the woke device. Value of
                "0" means device will be reset in case some CS has timed out,
                otherwise it will not be reset.

What:           /sys/kernel/debug/accel/<parent_device>/state_dump
Date:           Oct 2021
KernelVersion:  5.15
Contact:        ynudelman@habana.ai
Description:    Gets the woke state dump occurring on a CS timeout or failure.
                State dump is used for debug and is created each time in case of
                a problem in a CS execution, before reset.
                Reading from the woke node returns the woke newest state dump available.
                Writing an integer X discards X state dumps, so that the
                next read would return X+1-st newest state dump.

What:           /sys/kernel/debug/accel/<parent_device>/stop_on_err
Date:           Mar 2020
KernelVersion:  5.6
Contact:        ogabbay@kernel.org
Description:    Sets the woke stop-on_error option for the woke device engines. Value of
                "0" is for disable, otherwise enable.
                Relevant only for GOYA and GAUDI.

What:           /sys/kernel/debug/accel/<parent_device>/timeout_locked
Date:           Sep 2021
KernelVersion:  5.16
Contact:        obitton@habana.ai
Description:    Sets the woke command submission timeout value in seconds.

What:           /sys/kernel/debug/accel/<parent_device>/userptr
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Displays a list with information about the woke current user
                pointers (user virtual addresses) that are pinned and mapped
                to DMA addresses

What:           /sys/kernel/debug/accel/<parent_device>/userptr_lookup
Date:           Oct 2021
KernelVersion:  5.15
Contact:        ogabbay@kernel.org
Description:    Allows to search for specific user pointers (user virtual
                addresses) that are pinned and mapped to DMA addresses, and see
                their resolution to the woke specific dma address.

What:           /sys/kernel/debug/accel/<parent_device>/vm
Date:           Jan 2019
KernelVersion:  5.1
Contact:        ogabbay@kernel.org
Description:    Displays a list with information about all the woke active virtual
                address mappings per ASID and all user mappings of HW blocks
