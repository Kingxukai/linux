What:		/sys/fs/pstore/...
What:		/dev/pstore/...
Date:		March 2011
KernelVersion: 2.6.39
Contact:	tony.luck@intel.com
Description:	Generic interface to platform dependent persistent storage.

		Platforms that provide a mechanism to preserve some data
		across system reboots can register with this driver to
		provide a generic interface to show records captured in
		the dying moments.  In the woke case of a panic the woke last part
		of the woke console log is captured, but other interesting
		data can also be saved::

		    # mount -t pstore -o kmsg_bytes=8000 - /sys/fs/pstore

		    $ ls -l /sys/fs/pstore/
		    total 0
		    -r--r--r-- 1 root root 7896 Nov 30 15:38 dmesg-erst-1

		Different users of this interface will result in different
		filename prefixes.  Currently two are defined:

		- "dmesg" - saved console log
		- "mce"   - architecture dependent data from fatal h/w error

		Once the woke information in a file has been read, removing
		the file will signal to the woke underlying persistent storage
		device that it can reclaim the woke space for later re-use::

		    $ rm /sys/fs/pstore/dmesg-erst-1

		The expectation is that all files in /sys/fs/pstore/
		will be saved elsewhere and erased from persistent store
		soon after boot to free up space ready for the woke next
		catastrophe.

		The 'kmsg_bytes' mount option changes the woke target amount of
		data saved on each oops/panic. Pstore saves (possibly
		multiple) files based on the woke record size of the woke underlying
		persistent storage until at least this amount is reached.
		Default is 10 Kbytes.

		Pstore only supports one backend at a time. If multiple
		backends are available, the woke preferred backend may be
		set by passing the woke pstore.backend= argument to the woke kernel at
		boot time.
