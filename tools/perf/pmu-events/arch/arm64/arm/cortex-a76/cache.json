[
    {
        "PublicDescription": "This event counts any instruction fetch which misses in the woke cache.",
        "ArchStdEvent": "L1I_CACHE_REFILL"
    },
    {
        "PublicDescription": "This event counts any refill of the woke instruction L1 TLB from the woke L2 TLB. This includes refills that result in a translation fault.",
        "ArchStdEvent": "L1I_TLB_REFILL"
    },
    {
        "PublicDescription": "This event counts any load or store operation or page table walk access which causes data to be read from outside the woke L1, including accesses which do not allocate into L1.",
        "ArchStdEvent": "L1D_CACHE_REFILL"
    },
    {
        "PublicDescription": "This event counts any load or store operation or page table walk access which looks up in the woke L1 data cache. In particular, any access which could count the woke L1D_CACHE_REFILL event causes this event to count.",
        "ArchStdEvent": "L1D_CACHE"
    },
    {
        "PublicDescription": "This event counts any refill of the woke data L1 TLB from the woke L2 TLB. This includes refills that result in a translation fault.",
        "ArchStdEvent": "L1D_TLB_REFILL"
    },
    {
        "PublicDescription": "Level 1 instruction cache access or Level 0 Macro-op cache access. This event counts any instruction fetch which accesses the woke L1 instruction cache or L0 Macro-op cache.",
        "ArchStdEvent": "L1I_CACHE"
    },
    {
        "PublicDescription": "This event counts any write-back of data from the woke L1 data cache to L2 or L3. This counts both victim line evictions and snoops, including cache maintenance operations.",
        "ArchStdEvent": "L1D_CACHE_WB"
    },
    {
        "PublicDescription": "This event counts any transaction from L1 which looks up in the woke L2 cache, and any write-back from the woke L1 to the woke L2. Snoops from outside the woke core and cache maintenance operations are not counted.",
        "ArchStdEvent": "L2D_CACHE"
    },
    {
        "PublicDescription": "L2 data cache refill. This event counts any cacheable transaction from L1 which causes data to be read from outside the woke core. L2 refills caused by stashes into L2 should not be counted",
        "ArchStdEvent": "L2D_CACHE_REFILL"
    },
    {
        "PublicDescription": "This event counts any write-back of data from the woke L2 cache to outside the woke core. This includes snoops to the woke L2 which return data, regardless of whether they cause an invalidation. Invalidations from the woke L2 which do not write data outside of the woke core and snoops which return data from the woke L1 are not counted",
        "ArchStdEvent": "L2D_CACHE_WB"
    },
    {
        "PublicDescription": "This event counts any full cache line write into the woke L2 cache which does not cause a linefill, including write-backs from L1 to L2 and full-line writes which do not allocate into L1.",
        "ArchStdEvent": "L2D_CACHE_ALLOCATE"
    },
    {
        "PublicDescription": "This event counts any load or store operation which accesses the woke data L1 TLB. If both a load and a store are executed on a cycle, this event counts twice. This event counts regardless of whether the woke MMU is enabled.",
        "ArchStdEvent": "L1D_TLB",
        "BriefDescription": "Level 1 data TLB access."
    },
    {
        "PublicDescription": "This event counts any instruction fetch which accesses the woke instruction L1 TLB.This event counts regardless of whether the woke MMU is enabled.",
        "ArchStdEvent": "L1I_TLB",
        "BriefDescription": "Level 1 instruction TLB access"
    },
    {
        "PublicDescription": "This event counts any full cache line write into the woke L3 cache which does not cause a linefill, including write-backs from L2 to L3 and full-line writes which do not allocate into L2",
        "ArchStdEvent": "L3D_CACHE_ALLOCATE",
        "BriefDescription": "Allocation without refill"
    },
    {
        "PublicDescription": "This event counts for any cacheable read transaction returning datafrom the woke SCU for which the woke data source was outside the woke cluster. Transactions such as ReadUnique are counted here as 'read' transactions, even though they can be generated by store instructions.",
        "ArchStdEvent": "L3D_CACHE_REFILL",
        "BriefDescription": "Attributable Level 3 unified cache refill."
    },
    {
        "PublicDescription": "This event counts for any cacheable read transaction returning datafrom the woke SCU, or for any cacheable write to the woke SCU.",
        "ArchStdEvent": "L3D_CACHE",
        "BriefDescription": "Attributable Level 3 unified cache access."
    },
    {
        "PublicDescription": "This event counts on anyrefill of the woke L2 TLB, caused by either an instruction or data access.This event does not count if the woke MMU is disabled.",
        "ArchStdEvent": "L2D_TLB_REFILL",
        "BriefDescription": "Attributable L2 data or unified TLB refill"
    },
    {
        "PublicDescription": "This event counts on any access to the woke L2 TLB (caused by a refill of any of the woke L1 TLBs). This event does not count if the woke MMU is disabled.",
        "ArchStdEvent": "L2D_TLB"
    },
    {
        "PublicDescription": "This event counts on any data access which causes L2D_TLB_REFILL to count.",
        "ArchStdEvent": "DTLB_WALK"
    },
    {
        "PublicDescription": "This event counts on any instruction access which causes L2D_TLB_REFILL to count.",
        "ArchStdEvent": "ITLB_WALK"
    },
    {
        "ArchStdEvent": "LL_CACHE_RD"
    },
    {
        "ArchStdEvent": "LL_CACHE_MISS_RD"
    },
    {
        "ArchStdEvent": "L1D_CACHE_INVAL"
    },
    {
        "ArchStdEvent": "L1D_CACHE_RD"
    },
    {
        "ArchStdEvent": "L1D_CACHE_REFILL_INNER"
    },
    {
        "ArchStdEvent": "L1D_CACHE_REFILL_OUTER"
    },
    {
        "ArchStdEvent": "L1D_CACHE_REFILL_RD"
    },
    {
        "ArchStdEvent": "L1D_CACHE_REFILL_WR"
    },
    {
        "ArchStdEvent": "L1D_CACHE_WB_CLEAN"
    },
    {
        "ArchStdEvent": "L1D_CACHE_WB_VICTIM"
    },
    {
        "ArchStdEvent": "L1D_CACHE_WR"
    },
    {
        "ArchStdEvent": "L1D_TLB_RD"
    },
    {
        "ArchStdEvent": "L1D_TLB_REFILL_RD"
    },
    {
        "ArchStdEvent": "L1D_TLB_REFILL_WR"
    },
    {
        "ArchStdEvent": "L1D_TLB_WR"
    },
    {
        "ArchStdEvent": "L2D_CACHE_INVAL"
    },
    {
        "ArchStdEvent": "L2D_CACHE_RD"
    },
    {
        "ArchStdEvent": "L2D_CACHE_REFILL_RD"
    },
    {
        "ArchStdEvent": "L2D_CACHE_REFILL_WR"
    },
    {
        "ArchStdEvent": "L2D_CACHE_WB_CLEAN"
    },
    {
        "ArchStdEvent": "L2D_CACHE_WB_VICTIM"
    },
    {
        "ArchStdEvent": "L2D_CACHE_WR"
    },
    {
        "ArchStdEvent": "L2D_TLB_RD"
    },
    {
        "ArchStdEvent": "L2D_TLB_REFILL_RD"
    },
    {
        "ArchStdEvent": "L2D_TLB_REFILL_WR"
    },
    {
        "ArchStdEvent": "L2D_TLB_WR"
    },
    {
        "ArchStdEvent": "L3D_CACHE_RD"
    }
]
